{"name":"Zoquete","tagline":"Zoquete is a library that wraps a socket connection with TLS","body":"# Zoquete\r\n\r\nZoquete is a library that wraps a socket connection with tls.\r\n\r\n[![Build Status](https://travis-ci.org/4yopping/zoquete.svg?branch=master)](https://travis-ci.org/4yopping/zoquete)\r\n[![npm version](https://badge.fury.io/js/zoquete.svg)](http://badge.fury.io/js/zoquete)\r\n[![Inline docs](http://inch-ci.org/github/4yopping/zoquete.svg?branch=master)](http://inch-ci.org/github/4yopping/zoquete)\r\n![Zoquete](./zoquete-logo.jpg)\r\n\r\n\r\n## Install\r\n\r\n```shell\r\nnpm install zoquete --save\r\n```\r\n\r\n\r\nExample: Ping-pong \r\n\r\n**Server:**\r\n\r\n```js\r\n    var Zoquete = require('zoquete'),\r\n    options = {\r\n        key: 'my-key.key',\r\n        cert: 'my-cert.cert',\r\n        requestCert: true,\r\n        ca: ['authorized-client.cert'],\r\n        port: 8080 // Listen port \r\n    },\r\n\r\n    z = new Zoquete(options).server(function(){\r\n        z.send('pong', {timestamp: Date.now()});\r\n        z.on('ping', function(data){\r\n            // data = {timestamp: \"timestamp-here\"}\r\n            z.send('pong', {timestamp: Date.now()});\r\n        });\r\n    });\r\n\r\n```\r\n\r\n**Client:**\r\n\r\n```js\r\n    var Zoquete = require('zoquete'),\r\n    options = {\r\n        host: 'localhost', // Server tls host\r\n        port: 8080 // Server tls port \r\n        key: 'my-key.key',\r\n        cert: 'my-cert.cert',\r\n        ca: ['authorized-server.cert'],\r\n         checkServerIdentity: function(host, cert) {\r\n            // Avoid the server name match verification\r\n            return;\r\n        }\r\n    },\r\n    z = new Zoquete(options).client();\r\n    z.on('pong', function(data){\r\n        // data = {timestamp: \"timestamp-here\"}\r\n        z.send('ping', {timestamp: Date.now()});\r\n    });\r\n```\r\n\r\n\r\n\r\n\r\n# Custom Events \r\n\r\nZoquete supports custom event names, excluding reserved events names:\r\n\r\n+ 'connection'\r\n+ 'error'\r\n+ 'data'\r\n+ 'close'\r\n\r\n\r\n# Recommended naming \r\n\r\nThe recommended naming event is based on (Create, Read, Update, Delete).\r\n\r\nE.g.: \r\n\r\n+ Proccess and storage: 'user:create'\r\n+ Update a user: 'user:update'\r\n+ Remove a user: 'user:delete'\r\n\r\nEvent names recommended to reading:\r\n\r\n+ Get a single user: 'user:readone'\r\n+ Get multiple users: 'user:read'\r\n\r\n\r\n# Responses\r\n\r\nOnce the client are sent the server will send the event name with his result.\r\n\r\nEg: \"myevent:done\" - The event \"myevent\" was done.\r\n    \"myevent:fail\" - An error or errors on \"myevent\".\r\n\r\n\r\n\r\n```js\r\n    // In client tls\r\n    z.on('myevent:fail', function(data){\r\n        // - data\r\n    });\r\n```\r\n\r\n\r\n\r\nAlternatively send method returns a promise which is triggered when the server sends the event \"done\" or \"fail\" containing\r\n\r\n\r\n```js\r\n    // In client tls\r\nz.send('myevent', {\r\n        say: 'daaaah!',\r\n    })\r\n    .then(function(response) {\r\n        // - Triggered by myevent:done\r\n    })\r\n    .catch(function(errors) {\r\n       // - Triggered by myevent:fail\r\n    });\r\n```\r\n\r\n\r\n# Usage\r\n\r\n\r\n```js\r\n    z.on('myevent', function(){}); // Good! :)\r\n    z.on('myevent:create', function(){}); // Good! :)\r\n    z.on('data', function(){}); // Bad! :(\r\n    z.on('error', function(){}); // Bad! :(\r\n\r\n    z.send('myevent', {}); // Good! :)\r\n    z.send('data', {}); // Bad! :(\r\n    z.send('myevent'); // Bad! :( The event sent must contain an object.\r\n    z.send('myevent', false); // Bad! :( Send only support objects {}\r\n```\r\n\r\n\r\n\r\n\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2015 Sergio Morlán Páramo, 4yopping and all the related trademarks\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}